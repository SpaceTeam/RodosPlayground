name: CI on push

on:
  push:
    branches:
    - master

  pull_request:
    branches:
    - master

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: "3.8"

    - name: Install codespell
      run: pip3 install codespell

    - name: Lint
      run: cmake -D FORMAT_COMMAND=clang-format-12 -P cmake/lint.cmake

    - name: Spell check
      if: always()
      run: cmake -P cmake/spell.cmake

  coverage:
    needs: lint

    runs-on: ubuntu-latest
    container: tuwienspaceteam/sts1-cobc:latest-linux-x86

    if: github.repository_owner == 'SpaceTeam'

    steps:
    - uses: actions/checkout@v2

    - name: Configure
      run: cmake --preset=ci-coverage

    - name: Build
      run: cmake --build build/coverage -j 2

    - name: Build Rodos tests
      run: cmake --build build/coverage -t RodosTests -j 2

    - name: Test
      working-directory: build/coverage
      run: ctest --output-on-failure -j 2

    - name: Process coverage info
      run: cmake --build build/coverage -t coverage

    - name: Submit to codecov.io
      uses: codecov/codecov-action@v3
      with:
        files: build/coverage/coverage.info

  sanitize:
    needs: lint

    runs-on: ubuntu-latest
    container: tuwienspaceteam/sts1-cobc:latest-linux-x86

    if: github.repository_owner == 'SpaceTeam'

    steps:
    - uses: actions/checkout@v2

    - name: Configure
      run: cmake --preset=ci-sanitize

    - name: Build
      run: cmake --build build/sanitize -j 2

    - name: Build Rodos tests
      run: cmake --build build/sanitize -t RodosTests -j 2

    - name: Test
      working-directory: build/sanitize
      env:
        ASAN_OPTIONS: "strict_string_checks=1:\
          detect_stack_use_after_return=1:\
          check_initialization_order=1:\
          strict_init_order=1:\
          detect_leaks=1"
        UBSAN_OPTIONS: print_stacktrace=1
      run: ctest --output-on-failure -j 2

  build-cobc:
    needs: lint

    runs-on: ubuntu-latest
    container: tuwienspaceteam/sts1-cobc:latest

    steps:
    - uses: actions/checkout@v2

    - name: Configure COBC
      run: cp ./stm32f411.cmake /. && cmake --preset=ci-cobc

    - name: Build COBC
      run: cmake --build build/cobc --config Release -j 2

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: CobcBinaries
        path: ./build/cobc/*.bin
        retention-days: 7

  test:
    needs: lint

    runs-on: ubuntu-latest
    container: tuwienspaceteam/sts1-cobc:latest

    steps:
    - uses: actions/checkout@v2

    - name: Configure linux-x86
      run: cmake --preset=ci-linux-x86

    - name: Build linux-x86
      run: cmake --build build/linux-x86 --config Release -j 2

    - name: Build Rodos tests
      run: cmake --build build/linux-x86 -t RodosTests -j 2

    - name: Test
      working-directory: build/linux-x86/Test
      run: ctest --output-on-failure -C Release -j 2
